{
	"compilerOptions": {
		"module": "CommonJS" /* Esto es para definir que nuestro cogido compilado pasara a JS. */,
		"lib": ["DOM", "ES2015"] /* Estoblece el estaándar final generado a partir de la compilación. */,
		"esModuleInterop": true /* Esto es para asgurernos de darle soporte a nuestro JS de acuerdo al TS compilado. */,
		"resolveJsonModule": true /* Nos permite interpretar importaciones de archivos .json */,
		"moduleResolution": "node" /* Esto nos permite verificar la inclusion de TS de forma explicita en node */,
		"target": "ES2015" /* Aca defines la estandarización del ECMAScript, se recomienda ES2020 o ES2015 */,
		"noUnusedLocals": false /* Establece tu compilación sin aviso de variables no usadas */,
		"noUnusedParameters": false /* Establece tu compilación sin aviso de parametros no usados */,
		"forceConsistentCasingInFileNames": true /* Establece la fuerza de mayúsculas y minúsculas */,
		"allowSyntheticDefaultImports": true /* Establece el soporte de exportaciones sin nombre para que cuando yo las importe no exista problemas al darle el alias */,
		"noImplicitAny": true /* Esto me permite que no me de recomendaciones de tipos 'any' */,
		"sourceMap": true /* Esto me permite habilitar un archivo fuente de js donde vaya a caer todo el codigo final */,
		"experimentalDecorators": true /* Esto me permite darle soporte decoracoderes */,
		"emitDecoratorMetadata": true /* Esto me permite que la definicion de los decoradores persistan en tiempo de ejecucíon */,
		"pretty": true /* Establece es una compilación limpia y leguble */,
		"strict": true /* Te permite habilitar el modo estricto para que te de sugerencias/recomendaciones de codigo en base al ECMA*/,
		"baseUrl": "./" /* Te permite definir el path donde se creara tu carpeta ditribución con el codigo final */,
		"outDir": "./build" /* Te permite darle el nombre a la carpeta de distribución */,
		"plugins": [
			/* Establece plugins para tu trasnformación de alias paths */
			{ "transform": "typescript-transform-paths" } /* Establece la conexión con el trasnformador de paths */,
			{
				"transform": "typescript-transform-paths",
				"afterDeclarations": true
			} /* Establece que su definición persista luego de la compilación */
		],
		"paths": {
			/* Establece tu configuración de tus alias path */
			"@bootstrap/*": ["src/bootstrap/*"],
			"@configs/*": ["src/configs/*"],
			"@auth/*": ["src/features/auth/*"],
			"@user/*": ["src/features/user/*"],
			"@interfaces/*": ["src/interfaces/*"],
			"@decorators/*": ["src/shared/globals/decorators/*"],
			"@helpers/*": ["src/shared/globals/helpers/*"],
			"@services/*": ["src/shared/globals/services/*"],
			"@workers/*": ["src/shared/globals/workers/*"],
			"@root/*": ["src/*"]
		}
	},
	"exclude": ["node_module"] /* Te permite excluir del proceso de compilacion el node_module */,
	"include": [
		"src/**/*.ts"
	] /* Te permite incluir en el proceso de compilación tu directorio de trabajo donde tienes tus .js */
}
